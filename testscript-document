1) package basicscript;
> Declares the package basicscript. This is used to group related Java classes.

2) imports
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import java.time.Duration;

>import statements:
Import Selenium classes for interacting with web elements (WebDriver, WebElement, By, Actions).
Import ChromeDriver to control the Chrome browser.
Import Duration to set timeouts.

3) Main Class
public class FirstTest {

>Defines a public class named FirstTest.

4) Main Methods
public static void main(String[] args) {

>The entry point for the program. This is where the Selenium script begins execution.

5) Driver Setup and Navigation
ChromeDriver driver = new ChromeDriver();

>Instantiates the ChromeDriver, launching a new Chrome browser instance.

6) Open url
driver.get("https://fitpeo.com");

>Opens the specified URL (https://fitpeo.com) in the browser.

7) window maximize 
driver.manage().window().maximize();

>Maximizes the browser window for better visibility of web elements.

8) Setup timeout
driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));

>Sets an implicit wait of 10 seconds, ensuring the driver waits for elements to load before throwing exceptions.

9) Interacting with the Website
WebElement revenueCalculatorLink = driver.findElement(By.linkText("Revenue Calculator"));

>Locates the "Revenue Calculator" link using its visible text.

10) Navigate another page
revenueCalculatorLink.click();

>Clicks the "Revenue Calculator" link to navigate to the desired page.

11) Scrolling and Slider Interaction
WebElement sliderSection = driver.findElement(By.xpath("//div[@class='MuiBox-root css-rfiegf']"));

>Locates the slider section using an XPath selector.

12) scroll slider
((org.openqa.selenium.JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", sliderSection);

>Uses JavaScript to scroll the browser window until the slider section is visible.

13) slider element using its CSS class
WebElement slider = driver.findElement(By.xpath("//span[contains(@class,'MuiSlider-thumb MuiSlider-thumbSizeMedium')]"));

14) Action interaction
Actions action = new Actions(driver);
action.clickAndHold(slider).moveByOffset(94, 0).release().perform();

>Creates an Actions object for advanced user interactions.
clickAndHold(slider): Clicks and holds the slider.
moveByOffset(94, 0): Moves the slider horizontally by 94 pixels.
release(): Releases the slider after dragging it.

15) Selecting CPT Code Checkboxes
String[] cptCodes = {"CPT-99091", "CPT-99453", "CPT-99454", "CPT-99474"};

>Defines an array of CPT codes. These codes will guide the script in interacting with related elements.

16) loop each cpt
for (String code : cptCodes) {
    WebElement cptCheckbox = driver.findElement(By.xpath("(//input[@class='PrivateSwitchBase-input css-1m9pwf3'])"));
    if (!cptCheckbox.isSelected()) {
        cptCheckbox.click();
    }
}

>Loops through each CPT code in the array.
Locates a checkbox element using its class.
isSelected(): Checks if the checkbox is already selected.
click(): Selects the checkbox if it is not selected.

17) Repeating Checkbox Selection
for (String code : cptCodes) {
    WebElement cptCheckbox = driver.findElement(By.xpath("(//input[@class='PrivateSwitchBase-input css-1m9pwf3'])[2]"));
    if (!cptCheckbox.isSelected()) {
        cptCheckbox.click();
    }
}

> Similar to the previous loop but targets a different checkbox using an XPath with an indexes [2][3][4][8]

18) Closing the Browser
driver.quit();

>Closes the browser and terminates the WebDriver session, freeing resources.

































Explanation of Key Sections

1.Browser Setup:
   - Instantiates the ChromeDriver to launch the Chrome browser.
   - Maximizes the browser window for a better view of elements.

2.Navigating to the Website:
   - Opens the specified URL and ensures elements are loaded by setting an implicit wait.

3.Interaction with Elements:
   - Scrolling into View: Scrolls to a specific section to ensure the slider is visible.
   - Slider Movement: Uses Actions to drag the slider to a specific offset.

4.Checkbox Selection:
   - Loops through the CPT codes and interacts with the corresponding checkboxes.
   - Ensures each checkbox is selected only if it is not already selected.

5.Browser Cleanup:
   - Ensures the browser is closed after the script execution to release resources.
